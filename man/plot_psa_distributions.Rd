% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_psa_distributions.R
\name{plot_psa_distributions}
\alias{plot_psa_distributions}
\title{Plot sampled PSA parameter distributions}
\usage{
plot_psa_distributions(
  df_psa_random,
  cap_quantiles = c(0.01, 0.99),
  base_size = 14,
  scale = 1.5,
  rel_min_height = 0.01,
  print_group_table = TRUE
)
}
\arguments{
\item{df_psa_random}{data frame of PSA draws (rows = draws, columns = parameters).
Only numeric columns are used.}

\item{cap_quantiles}{numeric length-2 vector (in (0,1)) giving lower/upper quantiles
for optional capping, e.g., \code{c(0.01, 0.99)}. Use \code{NULL} to disable capping.
Default = c(0.01, 0.99).}

\item{base_size}{base font size for \code{theme_bw}. Default = 14.}

\item{scale}{ridge height scaling for \code{geom_density_ridges}. Default = 1.5.}

\item{rel_min_height}{minimum ridge height to display. Default = 0.01.}

\item{print_group_table}{print \code{table(df_melt$Group)} for a quick check. Default = TRUE.}
}
\value{
a named list containing:
\itemize{
\item \code{df_melt}: long-format data with \code{Parameter}, \code{value}, \code{Group}
\item \code{group_table}: frequency table of groups
\item \code{plots}: named list of ggplot objects for "Probabilities", "Utilities",
"Costs", and "Other" (missing groups return \code{NULL})
}
}
\description{
\code{plot_psa_distributions} melts PSA draws, classifies parameters
prefixes ("p_", "u_", "c_"), optionally caps extreme values by quantiles, and
produces separate ridge-density plots per group (Probabilities / Utilities / Costs / Other).
}
\examples{
\donttest{
set.seed(1); n <- 1000
df <- data.frame(
  p_event = rbeta(n, 2, 8),  p_death   = rbeta(n, 5, 3),
  u_base  = rbeta(n, 20, 5), u_treated = pmin(pmax(rnorm(n, .82, .06), 0), 1),
  c_tx    = rgamma(n, 2, 0.001), c_hosp = rgamma(n, 3, 0.005),
  other_noise = rnorm(n, 10, 1)
)

# Separate panels: one plot per group; no global capping to keep axes sensible.
out <- plot_psa_distributions(df, cap_quantiles = NULL)
out$group_table

# Print each panel (Probabilities / Utilities / Costs / Other if present)
for (nm in c("Probabilities", "Utilities", "Costs", "Other")) {
  if (!is.null(out$plots[[nm]])) print(out$plots[[nm]])
}
}
}
